- id: '1717273577381'
  alias: Reading Mode
  description: ''
  trigger:
  - platform: tag
    tag_id: reading_mode
  condition: []
  action:
  - service: input_boolean.toggle
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.reading_mode
  mode: single
- id: '1717272526539'
  alias: Media Room Scene
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.media_scene_select
  condition: []
  action:
  - service: script.turn_on
    data_template:
      entity_id: script.{{trigger.to_state.state}}
  mode: single
- id: '1717271327275'
  alias: Backdoor Open
  description: Is the backdoor open?
  trigger:
  - platform: state
    entity_id: binary_sensor.contact_back_door
    to: 'on'
    for: 00:03:00
  condition: []
  action:
  - service: notify.all_devices
    data:
      message: Back Door is Open!
      title: Door Open
  - service: notify.alexa_media
    data:
      message: The Back Door is Open!
      data:
        type: announce
      target:
      - media_player.echo_show
      - media_player.kitchen_echo
      - media_player.parlor
      - maeia_player.bedroom
      - media_player.babe_cave
      - media_player.family_room
      - media_player.garage
  mode: single
- id: '1717271382609'
  alias: Garden Timelapse
  description: ''
  trigger:
  - platform: time_pattern
    hours: /1
  condition:
  - condition: state
    entity_id: sun.sun
    state: above_horizon
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.backyard_n_outside
      filename: www/tmp/timelapse/snapshot_{{now().strftime('%H:%M-%d%b')}}.jpg
  mode: single
- id: '1717271470147'
  alias: Garage Door
  description: Open/Close the garage door
  trigger:
  - platform: tag
    tag_id: garage
  condition: []
  action:
  - service: cover.toggle
    data:
      entity_id: cover.shuttle_bay
  mode: single
- id: '1717274816399'
  alias: On Air
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.onair
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.onair
      state: 'on'
    then:
    - service: frontend.set_theme
      metadata: {}
      data:
        name: red
    else:
    - service: frontend.set_theme
      metadata: {}
      data:
        name: clear
  mode: single
- id: '1717275334743'
  alias: Trash Reminder
  description: ''
  trigger:
  - platform: time
    at: '17:00:00'
  condition:
  - condition: state
    entity_id: binary_sensor.trash_day
    state: 'on'
  action:
  - service: input_boolean.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.trash_reminder
  mode: single
- id: '1717275482675'
  alias: 'Office Scene '
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.office_scene_select
  condition: []
  action:
  - service: scene.turn_on
    data_template:
      entity_id: scene.{{trigger.to_state.state}}
      transition: 2
  mode: single
- id: '1717276452552'
  alias: Bedtime
  description: ''
  trigger:
  - platform: tag
    tag_id: bedtime_01
  - platform: state
    entity_id:
    - input_boolean.bedtime
    to: 'on'
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.alarm_arm_night
      state: 'off'
    then:
    - service: input_boolean.turn_on
      metadata: {}
      data: {}
      target:
        entity_id:
        - input_boolean.alarm_arm_night
        - input_boolean.camera_alerts
    - service: input_boolean.turn_off
      metadata: {}
      data: {}
      target:
        entity_id:
        - input_boolean.reading_mode
        - input_boolean.motion_lockout
    - service: lock.lock
      metadata: {}
      data: {}
      target:
        entity_id: lock.schlage_front
    - service: light.turn_off
      metadata: {}
      data: {}
      target:
        entity_id:
        - light.parlor_lamps
        - light.front_door_light
        - light.spot_light
        - light.media_lights
        - light.stair_light
        - light.hall_light
        - light.office_lamp
        - light.office_lights
        - light.kitchen
        - light.garage_overhead_light
        - light.fireplace_light
        - light.deck_lights
        - light.patio_lights
        - light.christmas_tree
        - light.wled_cloud_main
        - light.wled_cloud
        - light.storage
    - service: switch.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: switch.adaptive_lighting_sleep_mode_mbr
    - service: input_boolean.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: input_boolean.bedtime
    else:
    - service: media_player.turn_off
      metadata: {}
      data: {}
      target:
        device_id: 8781654d992a7a4701cbec887fab30d9
    - service: light.turn_off
      metadata: {}
      data:
        transition: 2
      target:
        entity_id:
        - light.eugene
        - light.rapunzel
        - light.wled_bed
        - light.wled_node_mbr
    - service: media_player.play_media
      metadata: {}
      data:
        media_content_id: bedtime
        media_content_type: routine
      target:
        entity_id: media_player.bedroom
    - service: input_boolean.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: input_boolean.bedtime
  mode: single
- id: '1720447716098'
  alias: Set Theme
  description: Set theme base on sun.sun state
  trigger:
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - sun.sun
    to: above_horizon
  - platform: state
    entity_id:
    - sun.sun
    to: below_horizon
  condition: []
  action:
  - if:
    - condition: state
      entity_id: sun.sun
      state: above_horizon
    then:
    - service: frontend.set_theme
      metadata: {}
      data:
        name: clear
    else:
    - service: frontend.set_theme
      metadata: {}
      data:
        name: clear-dark-vibrant
  mode: single
- id: '1720737172368'
  alias: MBR Wakeup
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.wake_up
    to: 'on'
  condition: []
  action:
  - service: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.adaptive_lighting_sleep_mode_mbr
  - service: light.turn_on
    metadata: {}
    data:
      transition: 300
    target:
      entity_id: light.bedroom_lamps
  - service: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.wake_up
  mode: single
- id: '1721330692346'
  alias: office AL test
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_button.test
  condition: []
  action:
  - service: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.adaptive_lighting_sleep_mode_office
  - service: light.turn_on
    metadata: {}
    data:
      transition: 300
      brightness_pct: 80
    target:
      entity_id: light.office_lights
  mode: single
- id: '1722628663642'
  alias: Motion Parlor
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_parlor
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_select.home_status
      state: Disarmed
    - condition: state
      entity_id: input_boolean.motion_lockout
      state: 'off'
    - condition: state
      entity_id: light.parlor_lamps
      state: 'off'
    - condition: state
      entity_id: input_boolean.reading_mode
      state: 'off'
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.tv_samsung_bsmt
      state: 'on'
    - condition: state
      entity_id: media_player.tv_samsung_bsmt
      state: 'off'
    - condition: state
      entity_id: media_player.tv_samsung_bsmt
      state: idle
    - condition: state
      entity_id: media_player.tv_samsung_bsmt
      state: playing
    - condition: state
      entity_id: media_player.tv_samsung_bsmt
      state: paused
    - condition: state
      entity_id: media_player.tv_samsung_bsmt
      state: standby
    - condition: state
      entity_id: media_player.tv_samsung_bsmt
      state: buffering
    - condition: state
      entity_id: media_player.tv_samsung_bsmt
      state: unknown
    enabled: false
  action:
  - parallel:
    - service: script.parlor_on
      metadata: {}
      data: {}
    - service: timer.start
      metadata: {}
      data:
        duration: 00:15:00
  mode: single
- id: '1723060117455'
  alias: Low Battery Notifications & Actions
  description: ''
  use_blueprint:
    path: Blackshome/low-battery-notifications-and-actions.yaml
    input:
      include_button: enable_button_trigger
      button_entity: input_button.check_batteries
      include_time: time_enabled
      time: '17:00:00'
      include_easy_notify: enable_easy_notify
      notify_device:
      - de59f44bd04cf3c8c7ba5ab30d27f57f
- id: '1723572383977'
  alias: 3D Printer Safety
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.3dprinter_saftey
    to: 'on'
  condition: []
  action:
  - sequence:
    - delay:
        hours: 0
        minutes: 0
        seconds: 3
        milliseconds: 0
    - service: input_boolean.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: input_boolean.3dprinter_saftey
  mode: single
- id: '1723572617932'
  alias: 3D Printer ON/OFF
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.3dprinter_power
    to: 'on'
    id: t01
    for:
      hours: 0
      minutes: 0
      seconds: 1
  - platform: state
    entity_id:
    - input_boolean.3dprinter_power
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    id: t02
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - t01
      sequence:
      - service: switch.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: switch.3d_printer
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - t02
        - condition: state
          entity_id: input_boolean.3dprinter_safety
          state: 'on'
      sequence:
      - service: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: switch.3d_printer
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - t02
        - condition: state
          entity_id: input_boolean.3dprinter_safety
          state: 'off'
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.3dprinter_power
  mode: single
