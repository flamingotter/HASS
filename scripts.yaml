basement_stairs_on:
  alias: basement_stairs_on
  sequence:
  - service: light.turn_on
    data:
      color_temp: 222
      brightness_pct: 100
    target:
      entity_id: light.stair_light
  mode: single
  icon: mdi:stairs
basement_stairs_off:
  alias: basement_stairs_off
  sequence:
  - service: lifx.effect_colorloop
    data:
      saturation_min: 80
      saturation_max: 100
      period: 5
      change: 20
      spread: 30
      power_on: true
      brightness_pct: 50
    target:
      entity_id: light.stair_light
  mode: single
  icon: mdi:stairs
dinner_msg:
  alias: Dinner Msg
  sequence:
  - service: notify.alexa_media
    data:
      message: It's time to eat, please make your way to the kitchen
      target:
      - media_player.bedroom
      - media_player.garage
      - media_player.office
      - media_player.babe_cave
      - media_player.media_room
      data:
        method: all
        type: announce
  mode: single
  icon: mdi:food-turkey
disarmed_night:
  alias: Disarmed Night
  sequence:
  - service: light.turn_on
    data:
      transition: 2
      color_temp: 222
      brightness_pct: 100
    target:
      entity_id:
      - light.kitchen
      - light.parlor_lamps
  mode: single
  icon: mdi:shield-moon
media_room_on:
  alias: Media Room On
  sequence:
  - service: light.turn_on
    data:
      brightness_pct: 50
      color_temp: 222
    target:
      entity_id: light.media_three
  mode: single
  icon: mdi:sofa
media_room_off:
  alias: Media Room Off
  sequence:
  - service: light.turn_off
    data:
      transition: 1
    target:
      entity_id: light.media_three
  mode: single
  icon: mdi:sofa
kitchen_on:
  alias: Kitchen On
  sequence:
  - service: light.turn_on
    data:
      brightness_pct: 50
      color_temp: 222
    target:
      entity_id: light.kitchen
  mode: single
  icon: mdi:silverware
kitchen_off:
  alias: Kitchen Off
  sequence:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.kitchen
  mode: single
  icon: mdi:silverware
parlor_on:
  alias: Parlor On
  sequence:
  - service: light.turn_on
    data:
      color_temp: 222
      brightness_pct: 100
      transition: 1
    target:
      entity_id:
      - light.parlor_lamps
  mode: single
  icon: mdi:piano
parlor_off:
  alias: Parlor Off
  sequence:
  - service: light.turn_off
    data:
      transition: 5
    target:
      entity_id:
      - light.parlor_lamps
      - light.front_door_light
  mode: single
  icon: mdi:piano-off
media_dim:
  alias: Media Dim
  sequence:
  - service: light.turn_on
    data:
      brightness_pct: 30
      color_temp: 222
    target:
      entity_id: light.media_lights
  - service: light.turn_on
    data:
      brightness_pct: 30
      rgb_color:
      - 0
      - 128
      - 128
    target:
      entity_id: light.spot_light
  mode: single
  icon: mdi:sofa
media_movie:
  alias: Media Movie
  sequence:
  - service: light.turn_off
    data:
      transition: 1
    target:
      entity_id:
      - light.media_one
      - light.media_two
      - light.media_three
  - service: light.turn_on
    data:
      rgb_color:
      - 0
      - 69
      - 255
      brightness_pct: 20
      transition: 1
    target:
      entity_id: light.media_four
  - service: light.turn_on
    data:
      transition: 1
      rgb_color:
      - 0
      - 128
      - 128
      brightness_pct: 30
    target:
      entity_id: light.spot_light
  mode: single
  icon: mdi:sofa
media_normal:
  alias: Media Normal
  sequence:
  - service: light.turn_on
    data:
      color_temp: 222
      brightness_pct: 100
    target:
      entity_id: light.media_lights
  - service: light.turn_on
    data:
      rgb_color:
      - 0
      - 128
      - 128
      brightness_pct: 30
    target:
      entity_id: light.spot_light
  mode: single
  icon: mdi:sofa
media_middle_off:
  alias: Media Middle Off
  sequence:
  - service: light.turn_off
    data:
      transition: 1
    target:
      entity_id:
      - light.media_two
      - light.media_three
  - service: light.turn_on
    data:
      transition: 1
      color_temp: 222
      brightness_pct: 99
    target:
      entity_id:
      - light.media_one
      - light.media_four
  mode: single
  icon: mdi:sofa
media_outer_off:
  alias: Media Outer Off
  sequence:
  - service: light.turn_off
    data:
      transition: 1
    target:
      entity_id:
      - light.media_one
      - light.media_four
  - service: light.turn_on
    data:
      transition: 1
      color_temp: 222
      brightness_pct: 99
    target:
      entity_id:
      - light.media_two
      - light.media_three
  mode: single
  icon: mdi:sofa
bed_mood_light:
  alias: Bed Mood Light
  sequence:
  - service: light.turn_on
    metadata: {}
    data:
      transition: 1
      brightness: 128
    target:
      entity_id: light.wled_bed
  - service: mqtt.publish
    metadata: {}
    data:
      qos: '1'
      retain: false
      topic: wled/mbr/mood/bed/api
      payload: SX=50 FX=09
  mode: single
  icon: mdi:bed
storage_on:
  alias: Storage On
  sequence:
  - service: light.turn_on
    data:
      brightness_pct: 100
      color_temp: 222
    target:
      entity_id: light.storage_lights
  mode: single
  icon: mdi:package-variant
storage_off:
  alias: Storage Off
  sequence:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.storage_lights
  mode: single
  icon: mdi:package-variant
office_normal:
  alias: Office Normal
  sequence:
  - data:
      color_temp: 222
      brightness_pct: 100
    target:
      entity_id: light.office_lights
    action: light.turn_on
  - data:
      rgb_color:
      - 0
      - 128
      - 128
      brightness_pct: 5
    target:
      entity_id:
      - light.wled_cloud_main
      - light.wled_cloud
    action: light.turn_on
  mode: parallel
  icon: mdi:laptop
  description: ''
  max: 5
office_dim:
  alias: Office Dim
  sequence:
  - service: light.turn_on
    data:
      brightness_pct: 50
      color_temp: 222
    target:
      entity_id: light.office_lights
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.office_lamp
  mode: single
  icon: mdi:laptop
  description: ''
office_1_2_4_off:
  alias: Office 1 2 4 Off
  sequence:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.office_four
      - light.office_one
      - light.office_two
      - light.office_lamp
  - service: light.turn_on
    data:
      brightness_pct: 100
    target:
      entity_id:
      - light.office_three
      - light.desk_light
  mode: single
  icon: mdi:laptop
  description: ''
armed_night_disarm:
  alias: Armed Night Disarm
  sequence:
  - if:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: armed_night
    then:
    - action: alarm_control_panel.alarm_disarm
      metadata: {}
      data:
        code: '1977'
      target:
        entity_id: alarm_control_panel.home_alarm
  description: ''
  icon: mdi:alarm
activate_alexa_actionable_notification:
  alias: activate_alexa_actionable_notification
  description: Activates an actionable notification on a specific echo device
  fields:
    text:
      description: The text you would like alexa to speak.
      example: What would you like the thermostat set to?
    event_id:
      description: Correlation ID for event responses
      example: ask_for_temperature
    alexa_device:
      description: Alexa device you want to trigger
      example: media_player.office_dot
    suppress_confirmation:
      description: Set true if you want to suppress 'okay' confirmation
      example: 'true'
  sequence:
  - data_template:
      entity_id: input_text.alexa_actionable_notification
      value: '{"text": "{{ text }}", "event": "{{ event_id }}", "suppress_confirmation":
        "{{ suppress_confirmation }}"}'
    action: input_text.set_value
  - data_template:
      entity_id: '{{ alexa_device }}'
      media_content_type: skill
      media_content_id: amzn1.ask.skill.c2564a56-c75d-451e-9a04-6349756d92c9
    action: media_player.play_media
  mode: single
activate_mobile_actionable_notification:
  alias: activate_mobile_actionable_notification
  description: Activates an actionable notification on a mobile device
  fields:
    notify_target:
      description: The mobile device(s) that you want to target the notification
      example: notify.all_devices
    title:
      description: The text you would like in the notification title.
      example: Feed the Pets
    message:
      description: The text you would like in the notification message.
      example: It is time to feed the Cats
    notify_tag:
      description: The notification tag used to thread the messages
      example: pets-notify
    notify_action_1:
      description: Notification actions
      example: feed_done, feed_ignore, feed_passon, etc...
    notify_action_1_title:
      description: Notification actions
      example: Done, Ignore, Ask Other, etc...
    notify_action_2:
      description: Notification actions
      example: feed_done, feed_ignore, feed_passon, etc...
    notify_action_2_title:
      description: Notification actions
      example: Done, Ignore, Ask Other, etc...
    notify_action_3:
      description: Notification actions
      example: feed_done, feed_ignore, feed_passon, etc...
    notify_action_3_title:
      description: Notification actions
      example: Done, Ignore, Ask Other, etc...
  sequence:
  - action: '{{ notify_target }}'
    data:
      message: '{{ message }}'
      title: '{{ title }}'
      data:
        tag: '{{ notify_tag }}'
        actions:
        - action: '{{ notify_action_1 }}'
          title: '{{ notify_action_1_title }}'
        - action: '{{ notify_action_2 }}'
          title: '{{ notify_action_2_title }}'
  mode: single
